title: Xcode Analyze
summary: |-
  Find flaws (potential bugs) in the source code of a project with the
  static analyzer built into Xcode.
description: |-
  Find flaws (potential bugs) in the source code of a project with the
  static analyzer built into Xcode.

  Runs Xcode's `analyze` action.
website: https://github.com/bitrise-steplib/steps-xcode-analyze
source_code_url: https://github.com/bitrise-steplib/steps-xcode-analyze
support_url: https://github.com/bitrise-steplib/steps-xcode-analyze/issues

host_os_tags:
  - "osx-10.10"
project_type_tags:
  - ios
  - macos
  - react-native
  - cordova
  - ionic
  - flutter
type_tags:
  - test

is_requires_admin_user: false
is_always_run: false
is_skippable: false

deps:
  check_only:
  - name: xcode
  brew:
  - name: go
toolkit:
  go:
    package_name: github.com/bitrise-steplib/steps-xcode-analyze

inputs:
  - workdir: $BITRISE_SOURCE_DIR
    opts:
      title: "Working directory"
      summary: ""
      description: |
        Working directory of the step.
        You can leave it empty to don't change it.
      is_required: false
      is_expand: true
  - project_path: $BITRISE_PROJECT_PATH
    opts:
      title: "Project (or Workspace) path"
      summary: ""
      description: |
        A `.xcodeproj` or `.xcworkspace` path, relative to
        the Workfing directory (if specified).
      is_required: true
      is_expand: true
      is_dont_change_value: false
  - scheme: $BITRISE_SCHEME
    opts:
      title: "Scheme name"
      summary: ""
      description: |
        The Scheme to use.

        **IMPORTANT**: The Scheme have to be marked as __shared__ in Xcode!
      is_required: true
      is_expand: true
      is_dont_change_value: false
  - is_clean_build: "no"
    opts:
      title: "Do a clean Xcode build before testing?"
      value_options:
        - "yes"
        - "no"
      is_required: true
      is_expand: true
      is_dont_change_value: false
  - force_code_sign_identity:
    opts:
      title: "Force code signing with Identity"
      description: |-
        Force xcodebuild to use specified Code Sign Identity.

        Specify code sign identity as full ID (e.g. `iPhone Developer: Bitrise Bot (VV2J4SV8V4)`)
        or specify code sign group ( `iPhone Developer` or `iPhone Distribution` ).
  - force_provisioning_profile:
    opts:
      title: "Force code signing with Provisioning Profile"
      description: |-
        Force xcodebuild to use specified Provisioning Profile.

        Use Provisioning Profile's UUID, profile's name is not acceptable by xcodebuild.

        How to get your UUID:

        - In xcode select your project -> Build Settings -> Code Signing
        - Select the desired Provisioning Profile, then scroll down in profile list and click on Other...
        - The popup will show your profile's UUID.

        Format example:

        - c5be4123-1234-4f9d-9843-0d9be985a068
  - disable_codesign: "yes"
    opts:
      title: "Disable Code Signing"
      description: |-
        In order to skip the code signing set this option to `yes`.
      value_options:
      - "yes"
      - "no"
  - disable_index_while_building: "yes"
    opts:
      title: Disable indexing during the build
      summary: Could make the build faster by disabling the indexing during the build run.
      description: |-
        Could make the build faster by adding `COMPILER_INDEX_STORE_ENABLE=NO` flag to the `xcodebuild` command which will disable the indexing during the build.

        Indexing is needed for
        
        * Autocomplete
        * Ability to quickly jump to definition
        * Get class and method help by alt clicking.

        Which are not needed in CI environment.

        **Note:** In Xcode you can turn off the `Index-WhileBuilding` feature  by disabling the `Enable Index-WhileBuilding Functionality` in the `Build Settings`.<br/>
        In CI environment you can disable it by adding `COMPILER_INDEX_STORE_ENABLE=NO` flag to the `xcodebuild` command.
      value_options:
      - "yes"
      - "no"
  - output_tool: xcpretty
    opts:
      category: Debug
      title: Output tool
      description: |-
        If output_tool is set to xcpretty, the xcodebuild output will be prettified by xcpretty.
        If output_tool is set to xcodebuild, the raw xcodebuild output will be printed.
      value_options:
      - xcpretty
      - xcodebuild
      is_required: true
      is_expand: false
      is_dont_change_value: false
  - output_dir: $BITRISE_DEPLOY_DIR
    opts:
      category: Debug
      title: Output directory path
      summary: Output directory path
      description: This directory will contain the generated raw-xcodebuild-output.log.
      is_required: true
  - verbose_log: "yes"
    opts:
      category: Debug
      title: "Enable verbose logging?"
      description: Enable verbose logging?
      is_required: true
      value_options:
      - "yes"
      - "no"
